@using Crm.Library.EntityConfiguration
@using Crm.Library.Globalization.Extensions
@using Crm.Library.Modularization.Extensions
@using Crm.Model.Interfaces
@using Crm.ViewModels
@inherits Crm.Library.Modularization.CrmViewUserControl<Crm.ViewModels.GenericListViewModel>

<ul class="top-menu bgm-blue p-l-0">
	<li class="dropdown" data-bind="tooltip: true" data-placement="bottom" title="@(Html.Localize("Close"))">
		<a id="close-generic-list-filter" href="#" data-trigger="#right-nav">
			<i class="tm-icon zmdi zmdi-close"></i>
		</a>
	</li>
	<li class="dropdown pull-right" data-bind="tooltip: true" data-placement="bottom" title="@(Html.Localize("Filter"))">
		<a id="apply-generic-list-filter" href="#" data-trigger="#right-nav" data-bind="click: filter">
			<i class="tm-icon zmdi zmdi-check"></i>
		</a>
	</li>
	<li class="dropdown pull-right" data-bind="tooltip: true" data-placement="bottom" title="@(Html.Localize("Reset"))">
		<a id="reset-generic-list-filter" href="#" data-trigger="#right-nav" data-bind="click: resetFilter">
			<i class="tm-icon zmdi zmdi-undo"></i>
		</a>
	</li>
</ul>
<div class="listview lv-bordered">
	<div class="lv-item">
		<form role="form" action="#">
			<!-- ko if: $root.isTabViewModel() -->
			@foreach (var filterDefinition in Model.FilterProperties.Where(x => x.ShowOnMaterialTab))
			{
				@await Html.PartialAsync("Material/GenericListFilter" + filterDefinition.GetFilterDefinitionTypeName(), Model.SynchronizedModel(new CrmModelItem<FilterDefinition> { Item = filterDefinition }))
			}
			<!-- /ko -->
			<!-- ko ifnot: $root.isTabViewModel() -->
			@foreach (var filterDefinition in Model.FilterProperties)
			{
				@await Html.PartialAsync("Material/GenericListFilter" + filterDefinition.GetFilterDefinitionTypeName(), Model.SynchronizedModel(new CrmModelItem<FilterDefinition> { Item = filterDefinition }))
			}
			<!-- /ko -->
			@Html.PluginRenderActions($"{Model.ControllerName}FilterTemplate")
			@Html.PluginRenderActions("MaterialGenericListFilterExtensions")
			<button class="btn btn-primary hide" data-bind="click: filter"></button>
		</form>
	</div>
	@if (typeof(IEntityWithTags).IsAssignableFrom(Model.Type))
	{
		<!-- ko if: $data.hasTags -->
		<div class="lv-item tags m-b-10">
			<div class="lv-title">@(Html.Localize("Tags"))</div>
			<!-- ko foreach: tags -->
			<div class="btn-group m-5">
				<button class="btn waves-effect" data-bind="text: $data, click: $parent.toggleTag, css: $parent.getTagButtonClass($data)"></button>
				<span data-bind="visible: $parent.selectedTags.indexOf($data) !== -1">
					<!-- ko requiredPermission: { name: 'RenameTag', group: $root.contactType } -->
					<a class="btn btn-default waves-effect" href="#" data-toggle="modal" data-target="#smModal" data-route="Main/Contact/RenameTagTemplate/{{$data}}" data-bind="tooltip: true" title="@(Html.Localize("Edit"))">
						<i class="zmdi zmdi-hc-lg zmdi-edit"></i>
					</a>
					<!-- /ko -->
					<!-- ko requiredPermission: { name: 'DeleteTag', group: $root.contactType } -->
					<a class="btn btn-default waves-effect" href="#" data-bind="click: $root.deleteTag, tooltip: true" title="@(Html.Localize("Remove"))">
						<i class="zmdi zmdi-hc-lg zmdi-delete"></i>
					</a>
					<!-- /ko -->
				</span>
			</div>
			<!-- /ko -->
			<div data-bind="visible: tags().length === 0">
				@(Html.Localize("TagEmptySlate"))
			</div>
		</div>
		<!-- /ko -->
	}
</div>