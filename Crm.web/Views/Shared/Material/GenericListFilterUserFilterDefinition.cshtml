@inherits Crm.Library.Modularization.CrmViewUserControl<CrmModelItem<FilterDefinition>>
@using Crm.Library.EntityConfiguration
@using Crm.Library.Globalization.Extensions
@using Crm.ViewModels

@{

	var filterDefinition = (UserFilterDefinition)Model.Item;
	var name = filterDefinition.Caption ?? filterDefinition.PropertyInfo.Name;
}
@{
	Func<string, string> GetSelect2Data = delegate(string modelPath)
	{
		var read = $"function() {{ var value = ko.unwrap(this.getFilter('{modelPath}'));return value ? value.Value : value; }}";
		var write = $"function(newValue) {{ this.getFilter('{modelPath}').extend({{ filterOperator: {{ additionalProperties: {{ Operator: '===', caption: '{name}' }} }} }})(newValue); }}";
		if (modelPath.Contains("-Usergroup"))
		{
			write = $"function(newValue) {{ this.getFilter('{modelPath}').extend({{ filterOperator: {{ additionalProperties: {{ caption: '{name}' + '-Usergroup', Exclude: '{modelPath}'.indexOf('-Usergroup') !== -1 ? '{!filterDefinition.FilterForGroup}' : 'False' }} }} }})(newValue); }}";
		}
		return $"ko.pureComputed({{ read: {read}, write: {write} }}, $data)";
	};
	var onUserSelect = $"function (item) {{	if(item){{ $root.getFilter('{filterDefinition.GetModelPath()}')().displayedValue = Helper.User.getDisplayName(item) }} }}";
	var onUserGroupSelect = $"function (item) {{ if(item){{ $root.getFilter('{filterDefinition.GetModelPath()}'+'-Usergroup')().displayedValue = item.Name; $root.getFilter('{filterDefinition.GetModelPath()}')(null); }} }}";

	var modelPath = Model.Item.GetModelPath();

	var userSelectId = name.ToLower().Replace(".", "-") + "-filter";
	var userSelectDataBind = $@"select2autocompleter: {{
			autocompleteOptions: {{
				orderBy: ['LastName'],
				table: 'Main_User',
				mapDisplayObject: Helper.User.mapForSelect2Display,
				customFilter: function (query, term) {{ return Helper.User.filterUserQuery(query, term, $root.getFilter('{filterDefinition.GetModelPath()}-Usergroup')()); }},
				onSelect: {onUserSelect},
				placeholder: Helper.String.getTranslatedString('All')
			}}
		}},
		value: {GetSelect2Data(modelPath)}";
}

@if (filterDefinition.WithGroups)
{
	<div class="p-t-15 p-b-15">
		<fieldset>
			<legend class="c-black b-0 m-b-10 f-500 f-14">
				@(Html.Localize(name))
			</legend>
			<div class="row">
				<div class="col-md-6">
					<div class="filter-element form-group" id="@(name.ToLower().Replace(".", "-") + "-usergroup-filter")">
						<p class="m-b-5">@(Html.Localize("Usergroup"))</p>
						<select class="form-control" name="@(modelPath)" data-bind="select2autocompleter: { autocompleteOptions: { orderBy: ['Name'], table: 'Main_Usergroup', mapDisplayObject: Helper.User.mapUsergroupForSelect2Display, onSelect: @(onUserGroupSelect), placeholder: Helper.String.getTranslatedString('All') } }, value: @(GetSelect2Data(Model.Item.GetModelPath() + "-Usergroup"))">
						</select>
					</div>
				</div>
				<div class="col-md-6">
					<div class="filter-element form-group" id="@(userSelectId)">
						<p class="m-b-5">@(Html.Localize("User"))</p>
						<select class="form-control" name="@(modelPath)" data-bind="@(userSelectDataBind)">
						</select>
					</div>
				</div>
			</div>
		</fieldset>
	</div>
}
else
{
	<div class="filter-element form-group" id="@(userSelectId)">
		<p class="m-b-5">@(Html.Localize(name))</p>
		<select class="form-control" name="@(modelPath)" data-bind="@(userSelectDataBind)">
		</select>
	</div>
}