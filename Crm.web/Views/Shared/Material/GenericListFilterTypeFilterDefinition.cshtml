@inherits Crm.Library.Modularization.CrmViewUserControl<CrmModelItem<FilterDefinition>>
@using Crm.Library.EntityConfiguration
@using Crm.ViewModels
@using Crm.Library.Extensions
@using Crm.Library.Globalization.Extensions
@using Crm.Library.Globalization.Lookup
@using Crm.Library.Modularization.Extensions

@{ var filterDefinition = (TypeFilterDefinition)Model.Item; }
@{ var caption = filterDefinition.Caption ?? filterDefinition.PropertyInfo.Name; }
@if (filterDefinition.FilterType.Inherits<ILookup>()) { 
	var read = $"function() {{ var value = ko.unwrap(this.getFilter('{filterDefinition.GetModelPath()}')); return value !== null && value !== undefined && value.Operator ? value.Value : value; }}";
	var write = $"function(newValue) {{ this.getFilter('{filterDefinition.GetModelPath()}').extend({{ filterOperator: {{ operator: '===', additionalProperties: {{caption: '{caption}'}} }} }})(newValue); }}";
	var select2Data = $"ko.pureComputed({{ read: {read}, write: {write} }}, $data)";
	var lookupName = PluginProvider.FindPluginDescriptor(filterDefinition.FilterType).PluginName.Replace(".", String.Empty) + "_" + filterDefinition.FilterType.Name;
	var onSelect = $"function (item){{ if(item){{ $root.getFilter('{filterDefinition.GetModelPath()}')().displayedValue=item.Value; }} }}";
	<div class="filter-element form-group" id="@(filterDefinition.GetModelPath().ToLower().Replace(".", "-") + "-filter")">
		<p class="control-label m-b-5">@(Html.Localize(caption))</p>
		<select name="@(filterDefinition.GetModelPath())" class="form-control" data-bind="select2autocompleter: { data: @(select2Data), autocompleteOptions: { table: '@(lookupName)', getElementByIdQuery: Helper.Lookup.getLookupByKeyQuery, mapDisplayObject: Helper.Lookup.mapLookupForSelect2Display, customFilter: Helper.Lookup.queryLookup, onSelect: @(onSelect), placeholder: Helper.String.getTranslatedString('All') } }"></select>
	</div>
 } 
@Html.PluginRenderActions("MaterialGenericListFilterTypeFilterDefinition")
